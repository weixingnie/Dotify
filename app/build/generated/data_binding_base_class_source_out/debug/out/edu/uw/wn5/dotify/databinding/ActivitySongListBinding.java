// Generated by view binder compiler. Do not edit!
package edu.uw.wn5.dotify.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import edu.uw.wn5.dotify.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySongListBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView currentSong;

  @NonNull
  public final LinearLayout miniPlayer;

  @NonNull
  public final RecyclerView rvMusic;

  @NonNull
  public final Button shuffleButton;

  private ActivitySongListBinding(@NonNull ConstraintLayout rootView, @NonNull TextView currentSong,
      @NonNull LinearLayout miniPlayer, @NonNull RecyclerView rvMusic,
      @NonNull Button shuffleButton) {
    this.rootView = rootView;
    this.currentSong = currentSong;
    this.miniPlayer = miniPlayer;
    this.rvMusic = rvMusic;
    this.shuffleButton = shuffleButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySongListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySongListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_song_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySongListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.currentSong;
      TextView currentSong = rootView.findViewById(id);
      if (currentSong == null) {
        break missingId;
      }

      id = R.id.miniPlayer;
      LinearLayout miniPlayer = rootView.findViewById(id);
      if (miniPlayer == null) {
        break missingId;
      }

      id = R.id.rvMusic;
      RecyclerView rvMusic = rootView.findViewById(id);
      if (rvMusic == null) {
        break missingId;
      }

      id = R.id.shuffleButton;
      Button shuffleButton = rootView.findViewById(id);
      if (shuffleButton == null) {
        break missingId;
      }

      return new ActivitySongListBinding((ConstraintLayout) rootView, currentSong, miniPlayer,
          rvMusic, shuffleButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
